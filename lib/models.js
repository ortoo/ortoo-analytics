// Generated by CoffeeScript 1.6.2
(function() {
  var Event, EventSchema, ObjectId, Schema, conn, mongoose, rgxReplSet,
    __slice = [].slice;

  mongoose = require('mongoose');

  Schema = mongoose.Schema;

  ObjectId = Schema.Types.ObjectId;

  EventSchema = new Schema({
    time: {
      type: Date,
      required: true
    },
    eventName: {
      type: String,
      required: true
    },
    context: {
      type: String,
      required: true
    },
    user: ObjectId,
    object: ObjectId,
    objectType: String,
    container: ObjectId
  }, {
    strict: false
  });

  conn = mongoose.createConnection();

  Event = conn.model('Event', EventSchema);

  rgxReplSet = /^.+,.+$/;

  module.exports = {
    Event: Event,
    conn: conn,
    mongoose: mongoose,
    open: function() {
      var args;

      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (rgxReplSet.test(args[0])) {
        return conn.openSet.apply(conn, args);
      } else {
        console.log('connecting');
        return conn.open.apply(conn, args);
      }
    }
  };

}).call(this);
